<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    menu_create(40, 170, 300, 260, 30, 102, 90, 128);

    if room != Options {
        menu_setdimmed();
    }
    
    menu_addedit_boolean("Fullscreen:", "global.fullscreen", '
        gg2_write_ini("Settings", "Fullscreen", argument0);
        window_set_fullscreen(argument0);
    ');
    menu_addedit_select("Music:", "global.music", '
        gg2_write_ini("Settings", "Music", argument0);
        if(room != Options)
        {
            if (argument0 == MUSIC_BOTH || argument0 == MUSIC_INGAME_ONLY)
            {
                AudioControlPlaySong(global.IngameMusic, true);
            }
            else
            {
                AudioControlPlaySong(-1, false);
            }
        }
        else
        {
            if(argument0 == MUSIC_BOTH || argument0 == MUSIC_MENU_ONLY)
            {
                AudioControlPlaySong(global.MenuMusic, true);
            }
            else
            {
                AudioControlPlaySong(-1, false);
            }
        }
    ','
        menu_add_option(MUSIC_NONE, "None");
        menu_add_option(MUSIC_MENU_ONLY, "Menu Only");
        menu_add_option(MUSIC_INGAME_ONLY, "In-Game Only");
        menu_add_option(MUSIC_BOTH, "Menu and In-Game");
    '
    );
    
    menu_addedit_select("Particles:", "global.particles", '
        gg2_write_ini("Settings", "Particles", argument0);
    ','
        menu_add_option(PARTICLES_NORMAL, "Normal");
        menu_add_option(PARTICLES_OFF, "Disabled");
        menu_add_option(PARTICLES_ALTERNATIVE, "Alternative (faster)");
    ');
    
    menu_addedit_select("Gibs:", "global.gibLevel", '
        gg2_write_ini("Settings", "Gib Level", argument0);
    ','
        menu_add_option(0, "Disabled");
        menu_add_option(1, "Blood only");
        menu_add_option(2, "Blood and medium gibs");
        menu_add_option(3, "Full blood and gibs");
    ');
    
    menu_addedit_boolean("Kill Cam:", "global.killCam", '
        gg2_write_ini("Settings", "Kill Cam", argument0);
    ');
    menu_addedit_boolean("V Sync:", "global.monitorSync", '
        gg2_write_ini("Settings", "Monitor Sync", argument0);
        set_synchronization(argument0);
    ');
    menu_addedit_boolean("Prompt for server-sent plugins:", "global.serverPluginsPrompt", '
        if (argument0 == false)
            show_message("Please note that plugins can be dangerous, so you should only disable the prompt if you trust all plugins hosted at the source:#" + PLUGIN_SOURCE + "#" + PLUGIN_SOURCE_NOTICE)
        gg2_write_ini("Settings", "ServerPluginsPrompt", argument0);
    ');
    menu_addedit_boolean("Prompt for restart:", "global.restartPrompt", '
        gg2_write_ini("Settings", "RestartPrompt", argument0);
    ');
    
    menu_addtablink("Ingame", '
        instance_create(x,y,OptionsController);
        instance_destroy();
    ');
    menu_addtablink("Engine", '
        instance_create(x,y,EngineOptionsController);
        instance_destroy();
    ');
    menu_addtablink("Controls", '
        instance_create(x,y,ControlsController);
        instance_destroy();
    ');
    menu_addtablink("HUD Options", '
        instance_create(x,y,HUDOptionsController);
        instance_destroy();
    ');
    
    menu_addback("Back", '
        instance_destroy();
        if(room == Options)
            room_goto_fix(Menu);
        else
            instance_create(0,0,InGameMenuController);
    ');
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
